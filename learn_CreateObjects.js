/*
==========   Способы создания объекта   =============

1. Литерал объекта
2. Функция-конструктор
3. Object.create()
4. Функция, возвращающая объект
5. Конструктор Object

на примере объекта : { age : 20 }
*/

//==============================================================================
// 1. Литерал объекта

let o1 = {
    age : 20
};

console.log('o1 --> ', o1);

//==============================================================================
// 2. Функция-конструктор

let ConstrObj = function(age) {
    this.age = age;
}

let o2 = new ConstrObj(20);
console.log('o2 --> ', o2);

//==============================================================================
// 3. Object.create()

//Метод Object.create() создаёт новый объект с указанными
// объектом прототипа и свойствами.

//let o = {};  эквивалентно этому: let o = Object.create(Object.prototype);

 let o3 = Object.create(Object.prototype,
                        { age: { value: 20,
                                writable: true,
                                enumerable: true,
                                configurable: true
                        }
                        });

console.log('o3 --> ', o3);

//==============================================================================
// 4. Функция, возвращающая объект

let constrObj = function(age) {
    return {
        age : age
    }
}

let o4 = constrObj(20);
console.log('o4 --> ', o4);

//==============================================================================
// 5. Конструктор Object

let o5 = new Object();
o5.age = 20;
console.log('o5 --> ', o5);


